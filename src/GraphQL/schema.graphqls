schema {
    query: Query
    mutation: Mutation
}

type Query {
    me: User
    user(id: ID!): User!
    chat(id: ID!): Chat!
    server(id: ID!): Server!
    logIn(email: String, password: String): String
}

type Mutation {
    createUser(input: UserInput!): String
    updateUser(id: ID!, input: UserInput!): User
    deleteUser(id: ID!): User
}

type User {
    #=- Public -=#
    id: ID!
    username: String!
    isOnline: Boolean!
    servers: [Server!]!
    #=- Private -=#
    email: String
    chats: [Chat!]
    messages: [Message!]
}

input UserInput {
    username: String
    email: String
    password: String
}

type Message {
    #=- Public -=#
    id: ID!
    #=- Private -=#
    sender: User
    content: String
    # Either belongs to a Chat or a Channel
    chat: Chat
    channel: Channel
}

type Chat {
    #=- Public -=#
    id: ID!
    #=- Private -=#
    name: String
    users: [User!]
    messages: [Message!]
}

type Channel {
    #=- Public -=#
    id: ID!
    #=- Private -=#
    name: String
    server: Server
    messages: [Message!]
}

type Server {
    #=- Public -=#
    id: ID!
    name: String!
    owner: User!
    #=- Private -=#
    users: [User!]
    channels: [Channel!]
}
